---
- name: Gather all repositories
  ansible.builtin.find:
    path: "{{ apt_repositories_path }}"
    file_type: file
  register: apt_repositories_all

- name: Set fact apt_repositories_all_list
  ansible.builtin.set_fact:
    apt_repositories_all_list: "{{ apt_repositories_all.files | map(attribute='path') | list }}"

- name: Set fact apt_repositories_managed_list ( default )
  ansible.builtin.set_fact:
    apt_repositories_managed_list: "{{ apt_repositories_managed_list | default([]) + [apt_repositories_path + item + apt_repositories_ext] }}"
  with_items:
    - "{{ apt_repositories | map(attribute='filename') | list }}"
  when: apt_repositories_remove_mode == "default"

- name: Gather apt_repositories_managed_list ( postfix )
  ansible.builtin.find:
    path: "{{ apt_repositories_path }}"
    patterns: ".*{{ apt_repositories_postfix }}{{ apt_repositories_ext }}"
    file_type: file
  register: apt_repositories_managed
  when: apt_repositories_remove_mode == "postfix"

- name: Set fact apt_repositories_managed_list ( postfix )
  ansible.builtin.set_fact:
    apt_repositories_managed_list: "{{ apt_repositories_managed.files | map(attribute='path') | list }}"
  when: apt_repositories_remove_mode == "postfix"

- name: Set fact apt_repositories_exclude_list
  ansible.builtin.set_fact:
    apt_repositories_exclude_list: "{{ apt_repositories_exclude_list | default([]) + [apt_repositories_path + item + apt_repositories_ext] }}"
  with_items:
    - "{{ apt_repositories_exclude }}"

- name: Remove unmanaged repositories
  ansible.builtin.file:
    name: "{{ item }}"
    state: absent
  with_items:
    - "{{ apt_repositories_all_list | difference(apt_repositories_managed_list | default([]) + apt_repositories_exclude_list | default([]) ) }}"
